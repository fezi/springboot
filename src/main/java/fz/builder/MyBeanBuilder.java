// CHECKSTYLE:OFF
/**
 * Source code generated by Fluent Builders Generator
 * Do not modify this file
 * See generator home page at: http://code.google.com/p/fluent-builders-generator-eclipse-plugin/
 */

package fz.builder;

import java.util.ArrayList;
import java.util.List;

public class MyBeanBuilder extends MyBeanBuilderBase<MyBeanBuilder> {
	public static MyBeanBuilder myBean() {
		return new MyBeanBuilder();
	}

	public MyBeanBuilder() {
		super(new MyBean());
	}

	public MyBean build() {
		return getInstance();
	}
}

class MyBeanBuilderBase<GeneratorT extends MyBeanBuilderBase<GeneratorT>> {
	private MyBean instance;

	protected MyBeanBuilderBase(MyBean aInstance) {
		instance = aInstance;
	}

	protected MyBean getInstance() {
		return instance;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAnotherBean(AnotherBean aValue) {
		instance.setAnotherBean(aValue);

		return (GeneratorT) this;
	}

	public AnotherBeanAnotherBeanBuilder withAnotherBean() {
		AnotherBean obj = new AnotherBean();

		withAnotherBean(obj);

		return new AnotherBeanAnotherBeanBuilder(obj);
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAnotherName(String aValue) {
		instance.setAnotherName(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withBools(List<Boolean> aValue) {
		instance.setBools(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withAddedBool(Boolean aValue) {
		if (instance.getBools() == null) {
			instance.setBools(new ArrayList<Boolean>());
		}

		((ArrayList<Boolean>) instance.getBools()).add(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withF(double aValue) {
		instance.setF(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withIs(boolean aValue) {
		instance.setIs(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withName(String aValue) {
		instance.setName(aValue);

		return (GeneratorT) this;
	}

	@SuppressWarnings("unchecked")
	public GeneratorT withWrapperType(Integer aValue) {
		instance.setWrapperType(aValue);

		return (GeneratorT) this;
	}

	public class AnotherBeanAnotherBeanBuilder extends AnotherBeanBuilderBase<AnotherBeanAnotherBeanBuilder> {
		public AnotherBeanAnotherBeanBuilder(AnotherBean aInstance) {
			super(aInstance);
		}

		@SuppressWarnings("unchecked")
		public GeneratorT endAnotherBean() {
			return (GeneratorT) MyBeanBuilderBase.this;
		}
	}

	public static class AnotherBeanBuilderBase<GeneratorT extends AnotherBeanBuilderBase<GeneratorT>> {
		private AnotherBean instance;

		protected AnotherBeanBuilderBase(AnotherBean aInstance) {
			instance = aInstance;
		}

		protected AnotherBean getInstance() {
			return instance;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withName(String aValue) {
			instance.setName(aValue);

			return (GeneratorT) this;
		}

		@SuppressWarnings("unchecked")
		public GeneratorT withFoo(float aValue) {
			instance.setFoo(aValue);

			return (GeneratorT) this;
		}
	}
}
